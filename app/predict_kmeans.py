# -*- coding: utf-8 -*-
"""predict_kmeans

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VXgjNzEcc3Mr1I-ZGeeq3YEuFzc8BoGC
"""

import numpy as np
import pandas as pd
import csv
import os

# userid_col = "USER_ID"

Meal_Recommender_path = os.getcwd() + "/app/Meal_Recommender/"

def Load_Data(csvpath, ColumnList, sep=None):

  print("Loading data from ", csvpath)
  if sep==None:
    data = pd.read_csv(csvpath)[ColumnList]
  else:
    data = pd.read_csv(csvpath, sep=sep)[ColumnList]
  print ("number of rows, cols ", data.shape)
  if 'customers' in csvpath:
    print ("unique cust: ",len(data['USER_ID'].unique()))
  elif 'products' in csvpath:
    print ("unique prods: ", len(data['ProductID'].unique()))
  return data

def readClusterCentroids(filename):
  centroids = []
  with open(filename, 'r') as f:
    reader = csv.reader(f)
    centroids = list(reader)
  return centroids

def markCartProducts(productsList, size, products_in_cart):
  for i in range(len(productsList)):
    products_in_cart[productsList[i]] = 1;
  return products_in_cart

def Euclidean_distance(list1, list2):
  list1 = list1.reshape(1,452)
#   print (list1.shape, list2.shape)

  return np.linalg.norm(list1-list2)

#To be called from Register User Route
def allocateClusterToNewUser(recievedObject):
  #find the euclidean distance of the cartItems to the cluster centroids
  #allocate user to nearest cluster
  #update user_clusterx.csv file
  # global userid_col
  # path = './'
  product_data_our = Load_Data(Meal_Recommender_path+"PRODUCT.csv", ["ProductID", "ProductName"])
  centroids = []
  min_dist = 9999999
  cluster = 0

  for i in range(6):
    filename = Meal_Recommender_path + "centroids_"+str(i)+".csv"
    cluster_centres = readClusterCentroids(filename)
    centroids.append(cluster_centres)

  products_in_cart = np.zeros(len(product_data_our)) # shape: 452
  userId = recievedObject.get('USER_ID')
  productIds = recievedObject.get('ProductID') # shape : 11

  products_in_cart = markCartProducts(productIds,len(product_data_our),products_in_cart)

  #Cluster Allocation
  for i in range(6):
    centroids_np_array = list(map(float, centroids[i][0]))
    centroids_np_array = np.asarray(centroids_np_array)

    dist = Euclidean_distance(products_in_cart, centroids_np_array)
    if dist <= min_dist:
      min_dist = dist
      cluster = i

  #add user to the new cluster x_ids.csv
  filename = Meal_Recommender_path + str(cluster)+"_ids.csv"
  data = pd.read_csv(filename)
#   data[len(data.columns)] = userId
#   data.to_csv(filename)

  print("Allocated Cluster to User", userId, "is: ",cluster)

  return cluster, userId

# dummyData = {userid_col: 100874, 'ProductID': [1, 2, 3, 5, 7, 8, 11, 18, 19, 27, 39]}
# allocateClusterToNewUser(dummyData)
